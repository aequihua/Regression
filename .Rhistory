install.packages('UsingR')
library(UsingR)
data(father.son)
y <- (father.son$sheight - mean(father.son$sheight)) / sd(father.son$sheight)
x <- (father.son$fheight - mean(father.son$fheight)) / sd(father.son$fheight)
rho <- cor(x, y)
library(ggplot2)
g = ggplot(data.frame(x, y), aes(x = x, y = y))
g = g + geom_point(size = 5, alpha = .2, colour = "black")
g = g + geom_point(size = 4, alpha = .2, colour = "red")
g = g + geom_vline(xintercept = 0)
g = g + geom_hline(yintercept = 0)
g = g + geom_abline(position = "identity")
g = g + geom_abline(intercept = 0, slope = rho, size = 2)
g = g + geom_abline(intercept = 0, slope = 1 / rho, size = 2)
g = g + xlab("Father's height, normalized")
g = g + ylab("Son's height, normalized")
g
?mean
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
weighted.mean(x,w)
mean(x)
library(manipulate)
y <- galton$child - mean(galton$child)
x <- galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
freqData$child <- as.numeric(as.character(freqData$child))
freqData$parent <- as.numeric(as.character(freqData$parent))
myPlot <- function(beta){
g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))
g <- g  + scale_size(range = c(2, 20), guide = "none" )
g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g <- g + geom_point(aes(colour=freq, size = freq))
g <- g + scale_colour_gradient(low = "lightblue", high="white")
g <- g + geom_abline(intercept = 0, slope = beta, size = 3)
mse <- mean( (y - beta * x) ^2 )
g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))
g
}
manipulate(myPlot(beta), beta = slider(0.6, 1.2, step = 0.02))
library(manipulate)
myHist <- function(mu){
mse <- mean((galton$child - mu)^2)
g <- ggplot(galton, aes(x = child)) + geom_histogram(fill = "salmon", colour = "black", binwidth=1)
g <- g + geom_vline(xintercept = mu, size = 3)
g <- g + ggtitle(paste("mu = ", mu, ", MSE = ", round(mse, 2), sep = ""))
g
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
g <- ggplot(galton, aes(x = child)) + geom_histogram(fill = "salmon", colour = "black", binwidth=1)
g <- g + geom_vline(xintercept = mean(galton$child), size = 3)
g
ggplot(galton, aes(x = parent, y = child)) + geom_point()
library(dplyr)
freqData <- as.data.frame(table(galton$child, galton$parent))
names(freqData) <- c("child", "parent", "freq")
freqData$child <- as.numeric(as.character(freqData$child))
freqData$parent <- as.numeric(as.character(freqData$parent))
g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))
g <- g  + scale_size(range = c(2, 20), guide = "none" )
g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g <- g + geom_point(aes(colour=freq, size = freq))
g <- g + scale_colour_gradient(low = "lightblue", high="white")
g
library(manipulate)
y <- galton$child - mean(galton$child)
x <- galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
freqData$child <- as.numeric(as.character(freqData$child))
freqData$parent <- as.numeric(as.character(freqData$parent))
myPlot <- function(beta){
g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))
g <- g  + scale_size(range = c(2, 20), guide = "none" )
g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g <- g + geom_point(aes(colour=freq, size = freq))
g <- g + scale_colour_gradient(low = "lightblue", high="white")
g <- g + geom_abline(intercept = 0, slope = beta, size = 3)
mse <- mean( (y - beta * x) ^2 )
g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))
g
}
manipulate(myPlot(beta), beta = slider(0.6, 1.2, step = 0.02))
lm(I(child - mean(child))~ I(parent - mean(parent)) - 1, data = galton)
freqData <- as.data.frame(table(galton$child, galton$parent))
names(freqData) <- c("child", "parent", "freq")
freqData$child <- as.numeric(as.character(freqData$child))
freqData$parent <- as.numeric(as.character(freqData$parent))
g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))
g <- g  + scale_size(range = c(2, 20), guide = "none" )
g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g <- g + geom_point(aes(colour=freq, size = freq))
g <- g + scale_colour_gradient(low = "lightblue", high="white")
lm1 <- lm(galton$child ~ galton$parent)
g <- g + geom_abline(intercept = coef(lm1)[1], slope = coef(lm1)[2], size = 3, colour = grey(.5))
g
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(I(x~ y))
lm(I((x-mean(x))~ (y-mean(y)))
)
lm(I((x-mean(x)) ~ (y-mean(y)))
)
lm(I(x-mean(x) ~ y - mean(y) ))
lm( formula=I(x-mean(x)) ~ I(y - mean(y) ))) -1)
lm( formula=I(x-mean(x)) ~ I(y - mean(y) )) -1)
lm( formula=I(x-mean(x)) ~ I(y - mean(y) ))
lm( formula=I(x-mean(x)) ~ I(y - mean(y) -1 ))
library(datasets)
data(mtcars)
lm( formula=I(mtcars$weight) ~ I(mtcars$mpg) ), data=mtcars)
lm( formula=I(mtcars$weight) ~ I(mtcars$mpg), data=mtcars)
mtcars$weight
mtcars$mpg
summary(mtcars)
mtcars$wt
lm( formula=I(mtcars$wt) ~ I(mtcars$mpg), data=mtcars)
mtcars
library(datasets)
data(mtcars)
lm( formula=I(mtcars$wt-mean(mtcars$wt)) ~ I(mtcars$mpg-mean(mtcars$mpg)), data=mtcars)
corre = 0.5
sdx = 0.5
sdy = 1
slope=corre * (sdy/sdx)
slope
sdx=10
sdy=20
corre = 0.5
sdx = 0.5
sdy = 1
slope=corre * (sdy/sdx)
slope
0.4 * 1.5
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
mnx = mean(x)
sdx = sd(x)
sd
sdx
xn = (x - mnx)/sdx
xn
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(I(x~ y))
lm(I(y~ x))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
lm(I(x~ x))
lm( formula=I(mtcars$mpg-mean(mtcars$mpg)) ~ I(mtcars$wt-mean(mtcars$wt)),
data=mtcars)
?lm
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(I(y~ x))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(I(y~ x))
lm( formula=I(y-mean(y)) ~ I(x - mean(x) -1 ))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(I(y~ x))
lm( formula=I(y-mean(y)) ~ I(x - mean(x) -1 ))
lm(I(x~ y))
lm( formula=I(x-mean(x)) ~ I(y - mean(y) -1 ))
lm (y  ~ x)
lm (x  ~ y)
lm (x  ~ y -1)
lm (y  ~ x -1)
x
y
mtcars
data(mtcars)
y <- mtcars$mpg
x <- mtcars$wt
n <- length(y)
x
y
mean(x)
fit <- lm(y~x)
summary(fit)
fit <- lm(y~I(x-mean(x)))
fit
summary(fit)
summary(fit)$coef
summary(fit)$coefficients
sumCoef <- summary(fit)$coef
sumCoef
fit$df
sumCoef[1,1] + c(-1,1) * qt(.975,df=fit$df) * sumCoef[1,2]
newdata <- data.frame(x = 3.0)
p2 <- predict(fit, newdata, interval = ("prediction"))
p2
p1 <- predict(fit,newdata,interval=("confidence"))
p1
mtcarrs
mtcars
fit$coef
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2] # Para beta1
interv <- sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
interv
interv*2
x2 <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
lm(I(x2~ x2))
y <- mtcars$mpg
x <- mtcars$wt
n <- length(y)
fit <- lm(y~I(x-mean(x)))
fit$coef
y <- mtcars$mpg
x <- mtcars$wt
n <- length(y)
fitxy <- lm(y~I(x-mean(x)))
fitx <- lm(I(x~ x))
fitx
fitxy
fitxy$coef
fitxy$coef[1]
fitx$coef[1]
fitxy$coef[1] / fitx$coef[1]
fitx$coef[1] / fitxy$coef[1]
fitxy$residuals
fitx$residuals
sum(fitxy$residuals)
sum(fitx$residuals)
sum(fitx$residuals) / sum(fitxy$residuals)
fitxy$residuals
mean(fitxy$residuals)
summary(fitxy)
sum(fitxy$residuals^2)
summary(fitxy)$sigma
sum((y-mean(y))^2)
summary(fitx)$sigma
summary(fitx)$sigma / summary(fitxy$sigma)
summary(fitx)$sigma / summary(fitxy)$sigma
summary(fitxy)$r.squared
sum(fitxy$residuals^2)
sum(fitx$residuals^2)
sum(fitx$residuals^2) / sum(fitxy$residuals^2)
sum(fitxy$residuals^2) / sum(fitx$residuals^2)
summary(fitxy)
summary(fitxy)
summary(fitx)
summary(fitx)$r.squared
par(mfrow = c(1, 2))
boxplot(mpg~factor(am),data=mtcars, main="Automatic vs. Manual",
xlab="Transmission (0=Automatic, 1=Manual)", ylab="Miles Per Gallon")
pairs(mtcars)
par(mfrow = c(1, 2))
boxplot(mpg~factor(am),data=mtcars, main="Automatic vs. Manual",
xlab="Transmission (0=Automatic, 1=Manual)", ylab="Miles Per Gallon",
fill="blue")
pairs(mtcars)
par(mfrow = c(1, 2))
boxplot(mpg~factor(am),data=mtcars, main="Automatic vs. Manual",
xlab="Transmission (0=Automatic, 1=Manual)", ylab="Miles Per Gallon",
color="blue")
pairs(mtcars)
par(mfrow = c(1, 2))
boxplot(mpg~factor(am),data=mtcars, main="Automatic vs. Manual",
xlab="Transmission (0=Automatic, 1=Manual)", ylab="Miles Per Gallon",
notch="TRUE",col=(c("gold","darkgreen"))
pairs(mtcars)
par(mfrow = c(1, 2))
boxplot(mpg~factor(am),data=mtcars, main="Automatic vs. Manual",
xlab="Transmission (0=Automatic, 1=Manual)", ylab="Miles Per Gallon",
notch=TRUE,col=(c("gold","darkgreen"))
pairs(mtcars)
par(mfrow = c(1, 2))
boxplot(mpg~factor(am),data=mtcars, main="Automatic vs. Manual",
xlab="Transmission (0=Automatic, 1=Manual)", ylab="Miles Per Gallon",
notch=TRUE,col=c("gold","darkgreen"))
pairs(mtcars)
par(mfrow = c(1, 2))
boxplot(mpg~factor(am),data=mtcars, main="Automatic vs. Manual",
xlab="Transmission (0=Automatic, 1=Manual)", ylab="Miles Per Gallon",
col=c("gold","darkgreen"))
pairs(mtcars)
mispelos <- lm(mpg ~ factor(cyl) + wt, data = mtcars)
mispelos
summary(mispelos)
cyl
mtcars$cyl
mispelos <- lm(mpg ~ as.factor(cyl) + wt, data = mtcars)
summary(mispelos)
fit2 <- lm(mpg ~ as.factor(cyl), data=mtcars)
summary(fit2)$coef[3] # -11.56364
summary(fit)$coef[3] # -6.07086
data(mtcars)
attach(mtcars)
fit <- lm(mpg ~ as.factor(cyl) + wt, data=mtcars)
summary(fit) # as.factor(cyl)8  -6.0709
# Problem 2.
fit2 <- lm(mpg ~ as.factor(cyl), data=mtcars)
summary(fit2)$coef[3] # -11.56364
summary(fit)$coef[3] # -6.07086
summary(fit)
fit3 <- lm(mpg ~ as.factor(cyl)*wt, data=mtcars)
# OR another way
# fit32 <- lm(mpg ~ factor(cyl) + wt + factor(cyl):wt, data=mtcars)
summary(fit3)
result <- anova(fit, fit3, test="Chi")
result$Pr # 0.1037502
result
fit4 <- lm(mpg ~ I(wt * 0.5) + factor(cyl), data=mtcars)
summary(fit4)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit5 <- lm(y ~ x)
lm.influence(fit5)$hat[5] # 0.9945734
dfbetas(fit5)[5, 2] # -133.8226
