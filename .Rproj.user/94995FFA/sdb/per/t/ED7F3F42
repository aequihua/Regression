{
    "contents" : "library(manipulate)\nmyHist <- function(mu){\n  mse <- mean((galton$child - mu)^2)\n  g <- ggplot(galton, aes(x = child)) + geom_histogram(fill = \"salmon\", colour = \"black\", binwidth=1)\n  g <- g + geom_vline(xintercept = mu, size = 3)\n  g <- g + ggtitle(paste(\"mu = \", mu, \", MSE = \", round(mse, 2), sep = \"\"))\n  g\n}\nmanipulate(myHist(mu), mu = slider(62, 74, step = 0.5))\n\ng <- ggplot(galton, aes(x = child)) + geom_histogram(fill = \"salmon\", colour = \"black\", binwidth=1)\ng <- g + geom_vline(xintercept = mean(galton$child), size = 3)\ng\n\nggplot(galton, aes(x = parent, y = child)) + geom_point()\n\nlibrary(dplyr)\nfreqData <- as.data.frame(table(galton$child, galton$parent))\nnames(freqData) <- c(\"child\", \"parent\", \"freq\")\nfreqData$child <- as.numeric(as.character(freqData$child))\nfreqData$parent <- as.numeric(as.character(freqData$parent))\ng <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))\ng <- g  + scale_size(range = c(2, 20), guide = \"none\" )\ng <- g + geom_point(colour=\"grey50\", aes(size = freq+20, show_guide = FALSE))\ng <- g + geom_point(aes(colour=freq, size = freq))\ng <- g + scale_colour_gradient(low = \"lightblue\", high=\"white\")                    \ng\n\n\n# Regresion thrpugh the origin\nlibrary(manipulate)\ny <- galton$child - mean(galton$child)\nx <- galton$parent - mean(galton$parent)\nfreqData <- as.data.frame(table(x, y))\nnames(freqData) <- c(\"child\", \"parent\", \"freq\")\nfreqData$child <- as.numeric(as.character(freqData$child))\nfreqData$parent <- as.numeric(as.character(freqData$parent))\nmyPlot <- function(beta){\n  g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))\n  g <- g  + scale_size(range = c(2, 20), guide = \"none\" )\n  g <- g + geom_point(colour=\"grey50\", aes(size = freq+20, show_guide = FALSE))\n  g <- g + geom_point(aes(colour=freq, size = freq))\n  g <- g + scale_colour_gradient(low = \"lightblue\", high=\"white\")                     \n  g <- g + geom_abline(intercept = 0, slope = beta, size = 3)\n  mse <- mean( (y - beta * x) ^2 )\n  g <- g + ggtitle(paste(\"beta = \", beta, \"mse = \", round(mse, 3)))\n  g\n}\nmanipulate(myPlot(beta), beta = slider(0.6, 1.2, step = 0.02))\n\nlm(I(child - mean(child))~ I(parent - mean(parent)) - 1, data = galton)\n\nfreqData <- as.data.frame(table(galton$child, galton$parent))\nnames(freqData) <- c(\"child\", \"parent\", \"freq\")\nfreqData$child <- as.numeric(as.character(freqData$child))\nfreqData$parent <- as.numeric(as.character(freqData$parent))\ng <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))\ng <- g  + scale_size(range = c(2, 20), guide = \"none\" )\ng <- g + geom_point(colour=\"grey50\", aes(size = freq+20, show_guide = FALSE))\ng <- g + geom_point(aes(colour=freq, size = freq))\ng <- g + scale_colour_gradient(low = \"lightblue\", high=\"white\")                    \nlm1 <- lm(galton$child ~ galton$parent)\ng <- g + geom_abline(intercept = coef(lm1)[1], slope = coef(lm1)[2], size = 3, colour = grey(.5))\ng\n\n\n\n# Plot the Galton dataset\nlibrary(UsingR)\ndata(galton)\nlibrary(dplyr); library(ggplot2)\nfreqData <- as.data.frame(table(galton$child, galton$parent))\nnames(freqData) <- c(\"child\", \"parent\", \"freq\")\nfreqData$child <- as.numeric(as.character(freqData$child))\nfreqData$parent <- as.numeric(as.character(freqData$parent))\ng <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))\ng <- g  + scale_size(range = c(2, 20), guide = \"none\" )\ng <- g + geom_point(colour=\"grey50\", aes(size = freq+20, show_guide = FALSE))\ng <- g + geom_point(aes(colour=freq, size = freq))\ng <- g + scale_colour_gradient(low = \"lightblue\", high=\"white\")  \ng\n\n# Sacar los coeficientes beta\ny <- galton$child\nx <- galton$parent\nbeta1 <- cor(y, x) *  sd(y) / sd(x)\nbeta0 <- mean(y) - beta1 * mean(x)\nrbind(c(beta0, beta1), coef(lm(y ~ x)))\n\n# Sacar el invertido\nbeta1 <- cor(y, x) *  sd(x) / sd(y)\nbeta0 <- mean(x) - beta1 * mean(y)\nrbind(c(beta0, beta1), coef(lm(x ~ y)))\n\n# Mover los datos al origen\nyc <- y - mean(y)\nxc <- x - mean(x)\nbeta1 <- sum(yc * xc) / sum(xc ^ 2)\nc(beta1, coef(lm(y ~ x))[2])\n\n# Datos normalizados\nyn <- (y - mean(y))/sd(y)\nxn <- (x - mean(x))/sd(x)\nc(cor(y, x), cor(yn, xn), coef(lm(yn ~ xn))[2])\n\n\n# Plotear las lineas de regresion\ng <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))\ng <- g  + scale_size(range = c(2, 20), guide = \"none\" )\ng <- g + geom_point(colour=\"grey50\", aes(size = freq+20, show_guide = FALSE))\ng <- g + geom_point(aes(colour=freq, size = freq))\ng <- g + scale_colour_gradient(low = \"lightblue\", high=\"white\")  \ng <- g + geom_smooth(method=\"lm\", formula=y~x)\ng\n\n# Regresion a la media\nlibrary(UsingR)\ndata(father.son)\ny <- (father.son$sheight - mean(father.son$sheight)) / sd(father.son$sheight)\nx <- (father.son$fheight - mean(father.son$fheight)) / sd(father.son$fheight)\nrho <- cor(x, y)\nlibrary(ggplot2)\n  g = ggplot(data.frame(x, y), aes(x = x, y = y))\ng = g + geom_point(size = 5, alpha = .2, colour = \"black\")\ng = g + geom_point(size = 4, alpha = .2, colour = \"red\")\ng = g + geom_vline(xintercept = 0)\ng = g + geom_hline(yintercept = 0)\ng = g + geom_abline(position = \"identity\")\ng = g + geom_abline(intercept = 0, slope = rho, size = 2)\ng = g + geom_abline(intercept = 0, slope = 1 / rho, size = 2)\ng = g + xlab(\"Father's height, normalized\")\ng = g + ylab(\"Son's height, normalized\")\ng\n\n",
    "created" : 1430961789342.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4007090362",
    "id" : "ED7F3F42",
    "lastKnownWriteTime" : 1430962715,
    "path" : "~/GitHub/Regression/DemoCodes.R",
    "project_path" : "DemoCodes.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}